Since the answer is given, let's prove by induction with 2 different cases for $n$.

{\bf Base case}
\begin{itemize}
\item
When $n=2$, then clearly 1 comparison is needed.
Then, $2 \ceil{\lg 2} - 2^{\ceil{\lg 2}} + 1 = 1$.
\item
When $n=3$, then clearly $1+2=3$ comparisons are needed.
Then, $3 \ceil{\lg 3} - 2^{\ceil{\lg 3}} + 1 = 3$.
\end{itemize}

{\bf Inductive Steps}
The 2 cases:
\begin{itemize}
\item
{\bf When $n > 3$ is an even number.}
Observe that $\ceil{n/2} = \floor{n/2} = n/2$.
\begin{align*}
T(n) &= T(\ceil{\frac{n}{2}}) + T(\floor{\frac{n}{2}}) + (n - 1) \\
	&= 2T(\frac{n}{2}) + (n - 1) \\
	&= 2\bigg( \frac{n}{2} \ceil{\lg \frac{n}{2}} - 2^{\ceil{\lg \frac{n}{2}}} + 1 \bigg) + (n-1) \\
	&= n \ceil{\lg n - 1} - 2^{\ceil{\lg n - 1} + 1} + n + 1 \\
	&= n \ceil{\lg n} - n - 2^{\ceil{\lg n}} + n + 1 \\
	&= n \ceil{\lg n} - 2^{\ceil{\lg n}} + 1
\end{align*}
\item
{\bf When $n > 3$ is an odd number.}
Consider the following counting argument:
pad the whole array with a dummy value, say $-\infty$, so that $n' = n + 1$, which is an even number, so the ``even case" can be applied.
\begin{align*}
T(n') &= (n+1) \ceil{\lg (n+1)} - 2^{\ceil{\lg (n+1)}} + 1
\end{align*}
However, since $n > 3$, so $2^{i-1} < n < (n+1) \le 2^i$, and so $\ceil{\lg(n+1)} = \ceil{\lg n}$.
Moreover, $T(n)$ has overcount the total number of comparisons by exactly $\ceil{\lg n}$ comparisons (i.e. dummy variable forces one more comparison per depth on the recurrsion tree).
Thus, the real quantity is
\begin{align*}
T(n) &= T(n') - \ceil{\lg n} \\
	&= (n+1) \ceil{\lg (n+1)} - 2^{\ceil{\lg (n+1)}} + 1 - \ceil{\lg n} \\
	&= \bigg( n \ceil{\lg n} + \ceil{\lg n} \bigg) - 2^{\ceil{\lg n}} + 1 - \ceil{\lg n} \\
	&= n \ceil{\lg n} - 2^{\ceil{\lg n}} + 1
\end{align*}
\end{itemize}
Thus, all cases pass and we have the required result by induction.
\done
