Since the answer is given, let's prove by induction with 4 different cases for $n$.

{\bf Base case}
\begin{itemize}
\item
When $n=2$, then clearly 1 comparison is needed.
Then, $2 \ceil{\lg 2} - 2^{\ceil{\lg 2}} + 1 = 1$.
\item
When $n=3$, then clearly $1+2=3$ comparisons are needed.
Then, $3 \ceil{\lg 3} - 2^{\ceil{\lg 3}} + 1 = 3$.
\end{itemize}

{\bf Inductive Steps}
The 4 cases:
\begin{itemize}
\item
When $n$ is a power of 2.
Then, let $i = \lg n$, by the recursion tree method,
\begin{align*}
T(n) &= 2^i T(1) + in - \sum^{i-1}_{j=0} 2^j \\
	&= n\lg n - (2^{\lg n} - 1) & \text{geometric series} \\
	&= n \ceil{\lg n} - 2^{\ceil{\lg n}} + 1 & \text{since $\lg n \in \mathbb{N}$}
\end{align*}
\item
When $n$ is an even number but not a power of 2.
Observe that $\ceil{n/2} = \floor{n/2} = n/2$.
\begin{align*}
T(n) &= T(\ceil{\frac{n}{2}}) + T(\floor{\frac{n}{2}}) + (n - 1) \\
	&= \ceil{\frac{n}{2}} \ceil{\lg \ceil{\frac{n}{2}}} - 2^{\ceil{\lg \ceil{\frac{n}{2}}}} + 1
		+ \floor{\frac{n}{2}} \ceil{\lg \floor{\frac{n}{2}}} - 2^{\ceil{\lg \floor{\frac{n}{2}}}} + 1 + (n-1)\\
	&= \frac{n}{2} \ceil{\lg \frac{n}{2}} - 2^{\ceil{\lg \frac{n}{2}}} + 1
		+ \frac{n}{2} \ceil{\lg \frac{n}{2}} - 2^{\ceil{\lg \frac{n}{2}}} + 1 + (n-1) \\
	&= n \ceil{\lg \frac{n}{2}} - 2 \times 2^{\ceil{\lg \frac{n}{2}}} + n + 1 \\
	&= n \ceil{\lg n - 1} - 2^{\ceil{\lg n - 1} + 1} + n + 1 \\
	&= n \ceil{\lg n} - n - 2^{\ceil{\lg n}} + n + 1 \\
	&= n \ceil{\lg n} - 2^{\ceil{\lg n}} + 1
\end{align*}
\item
When $n$ is an odd number such that $2^{i-1} + 1 < n < 2^i$, for $i > 0$.
Let $n = 2k + 1$, for some $k \in \mathbb{N}$.
Observe that $\floor{n/2} = k = (n-1)/2$, and $\ceil{n/2} = k + 1 = (n+1)/2$, because $(n-1)$ and $(n+1)$ are even numbers.
Also, as long as $n > 3$,
\begin{align*}
\ceil{\lg k} = \ceil{\lg (k+1)} = \ceil{\lg (n-1)/2} = \ceil{\lg (n+1)/2} = \ceil{\lg n - 1}
\end{align*}
Then the total number of comparisons is
\begin{align*}
T(n) &= T(\ceil{\frac{n}{2}}) + T(\floor{\frac{n}{2}}) + (n - 1) \\
	&= \bigg( (k+1) \ceil{\lg n - 1} - 2^{\ceil{\lg n -1}} + 1 \bigg)
	 + \bigg( k \ceil{\lg n - 1} - 2^{\ceil{\lg n -1}} + 1 \bigg)
	 + (n-1) \\
	&= n \ceil{\lg n} - 2^{\ceil{\lg n}} + 1 
\end{align*}
because $k + (k+1) = 2k+1 = n$.
\item
{\bf Boundary Case} When $n > 3$ is odd and $n = 2^i + 1$ -- notice $\ceil{\lg k} + 1 = \ceil{\lg (k+1)}$, so the previous case cannot be applied.

Now, consider the following counting argument:
pad the whole array with a dummy variable, so that $n' = n + 1$, which is an even number, so the first case can be applied.
\begin{align*}
T(n') &= (n+1) \ceil{\lg (n+1)} - 2^{\ceil{\lg (n+1)}} + 1
\end{align*}
However, since $n > 3$, so $(n+1) < 2^i$, and so $\ceil{\lg(n+1)} = \ceil{\lg n}$.
Moreover, $T(n)$ has overcount the total number of comparisons by exactly $\ceil{\lg n}$ comparisons (i.e. dummy variable is being tested per depth of the recurrsion tree).
Thus, the real quantity is
\begin{align*}
T(n) &= T(n') - \ceil{\lg n} \\
	&= (n+1) \ceil{\lg (n+1)} - 2^{\ceil{\lg (n+1)}} + 1 - \ceil{\lg n} \\
	&= \bigg( n \ceil{\lg n} + \ceil{\lg n} \bigg) - 2^{\ceil{\lg n}} + 1 - \ceil{\lg n} \\
	&= n \ceil{\lg n} - 2^{\ceil{\lg n}} + 1 \\
\end{align*}
\end{itemize}
Thus, all cases pass and we have the required result by induction.
\done
